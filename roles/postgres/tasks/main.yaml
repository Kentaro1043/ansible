---
- name: Ensure PostgreSQL is installed
  become: true
  ansible.builtin.apt:
    name:
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
    state: present

- name: Allow External Connections to PostgreSQL
  become: true
  become_user: postgres
  community.postgresql.postgresql_set:
    name: listen_addresses
    value: "*"
  notify: Restart PostgreSQL

- name: Ensure PostgreSQL service is running
  become: true
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: Ensure backup directory exists
  become: true
  ansible.builtin.file:
    path: /var/backups/postgres
    state: directory
    owner: postgres
    group: postgres
    mode: "0644"

- name: Copy GCP credentials for backup
  become: true
  ansible.builtin.copy:
    content: "{{ lookup('community.sops.sops', '../secrets/gcp-service-account.enc.json') }}"
    dest: /root/gcp-service-account.json
    owner: root
    group: root
    mode: "0600"

- name: Load postgres secrets
  become: true
  ansible.builtin.set_fact:
    _postgres_secrets: "{{ lookup('community.sops.sops', '../secrets/secrets.enc.yaml') | from_yaml }}"
  no_log: true

- name: Set postgres credentials from secrets (create variables postgres_password_<name>)
  become: true
  ansible.builtin.set_fact:
    postgres_password_postgres: "{{ _postgres_secrets.postgres_password_postgres }}"
    postgres_password_vaultwarden: "{{ _postgres_secrets.postgres_password_vaultwarden }}"
    postgres_password_n8n: "{{ _postgres_secrets.postgres_password_n8n }}"
    postgres_backup_webhook_url: "{{ _postgres_secrets.postgres_backup_webhook_url }}"

- name: Set password for postgres user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "postgres"
    password: "{{ postgres_password_postgres }}"

- name: Copy backup script
  become: true
  ansible.builtin.template:
    src: postgres-backup.sh.j2
    dest: /usr/local/bin/backup_postgres.sh
    owner: root
    group: root
    mode: "0755"

- name: Include Postgres DB tasks
  ansible.builtin.include_tasks: db.yaml
  with_items: "{{ postgres }}"

- name: Clean up temporary postgres secrets container
  become: true
  ansible.builtin.set_fact:
    _postgres_secrets: {}
    postgres_password_vaultwarden: ""
    postgres_password_n8n: ""
    postgres_password_postgres: ""

- name: Schedule daily PostgreSQL backups
  become: true
  ansible.builtin.cron:
    name: "Daily PostgreSQL Backup"
    user: root
    job: "/usr/local/bin/backup_postgres.sh >> /var/log/backup_postgres.log 2>&1"
    minute: "0"
    hour: "3"
    state: present
